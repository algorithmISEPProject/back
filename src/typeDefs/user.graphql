type User {
  _id: Int!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  avatar: String
  banner: String
  bio: String
  location: String
  job: String
  descText: String
  descLink: String
  followers: [User]
  following: [User]
  friends: [User]
  posts: [Post!]!
  hobbies: [Hobby!]!
  events: [Event!]
  groups: [Group!]
  createdAt: String!
}

input CreateUserInput {
  _id: Int!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  username: String!
  firstName: String!
  lastName: String!
  password: String!
  avatar: String
  banner: String
}

type Query {
  user: [User]!
  users(id: Int!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User
  addHobbyToUser(userId: Int!, hobbyId: Int!): User
}
